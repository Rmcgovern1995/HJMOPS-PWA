/* Basic layout and components */
* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  font-family: system-ui, sans-serif;
}

html, body, #app {
  height: 100%;
  width: 100%;
}

body {
  background-color: var(--bg-color);
  color: var(--text-color);
  transition: background-color 0.2s, color 0.2s;
}

#app {
  display: flex;
  flex-direction: row;
  height: 100%;
}

.sidebar {
  width: 220px;
  min-width: 180px;
  background-color: var(--sidebar-bg);
  padding: 1rem;
  display: flex;
  flex-direction: column;
  border-right: 1px solid var(--border-color);
  /* Ensure the sidebar stays on top of the main content. Without a
     stacking context, flex children are painted in DOM order and
     later siblings may overlap earlier ones. Setting position and
     z-index gives the sidebar precedence for pointer events. */
  /* Fix the sidebar to the left so it does not scroll with the main
     content.  Setting a high z-index keeps it on top of the
     content area for reliable pointer interactions. */
  position: fixed;
  top: 0;
  left: 0;
  bottom: 0;
  z-index: 100;
}

/* Skip link: hidden until focused */
.skip-link {
  position: absolute;
  left: -999px;
  top: -999px;
  background: var(--accent-bg);
  color: var(--accent-text);
  padding: 0.5rem;
  z-index: 1000;
}
.skip-link:focus {
  left: 1rem;
  top: 1rem;
  text-decoration: none;
}

/* Toast/progress bar styles */
.toast {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  background-color: var(--accent-bg);
  color: var(--accent-text);
  text-align: center;
  padding: 0.5rem;
  font-weight: bold;
  z-index: 2000;
  box-shadow: 0 2px 4px rgba(0,0,0,0.2);
}
.toast.hidden {
  display: none;
}

.sidebar .logo {
  font-weight: bold;
  font-size: 1.3rem;
  margin-bottom: 1rem;
}

.sidebar nav {
  flex: 1;
}

.sidebar .nav-link {
  display: block;
  width: 100%;
  padding: 0.6rem 0.8rem;
  margin-bottom: 0.2rem;
  background: transparent;
  border: none;
  text-align: left;
  cursor: pointer;
  color: var(--text-color);
  border-radius: 4px;
  font-size: 0.95rem;
}

.sidebar .nav-link.active,
.sidebar .nav-link:hover {
  background-color: var(--accent-bg);
  color: var(--accent-text);
}

.sidebar-footer {
  margin-top: auto;
  display: flex;
  justify-content: center;
}

/* Bottom navigation bar for small screens */
.bottom-nav {
  position: fixed;
  bottom: 0;
  left: 0;
  right: 0;
  height: 50px;
  background-color: var(--sidebar-bg);
  display: none;
  flex-direction: row;
  justify-content: space-around;
  align-items: center;
  border-top: 1px solid var(--border-color);
  z-index: 101;
}
.bottom-nav a {
  flex: 1;
  text-align: center;
  font-size: 1.2rem;
  text-decoration: none;
  color: var(--text-color);
  padding-top: 0.3rem;
}
.bottom-nav a.active,
.bottom-nav a:hover {
  background-color: var(--accent-bg);
  color: var(--accent-text);
}

/* Responsive adjustments for screens 375px wide or less */
@media (max-width: 375px) {
  .sidebar {
    display: none;
  }
  #content {
    margin-left: 0;
    margin-bottom: 50px;
  }
  .bottom-nav {
    display: flex;
  }
}

#themeToggle {
  background: var(--accent-bg);
  color: var(--accent-text);
  border: none;
  border-radius: 4px;
  padding: 0.5rem;
  cursor: pointer;
}

#content {
  flex: 1;
  padding: 1rem;
  overflow-y: auto;
  /* Leave space for fixed sidebar */
  margin-left: 220px;
}

.panel {
  width: 100%;
  height: 100%;
}

/* Show only the active panel based on the URL hash.  All sections are
   hidden by default, but the dashboard is shown when there is no
   hash.  The :target pseudo-class selects the currently targeted
   section. */
main section {
  display: none;
}
#dashboardSection {
  display: block;
}
main section:target {
  display: block;
}

/* Modal styles */
.modal {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.4);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1000;
}

/* When the hidden attribute is present on the modal element, force it
   to be completely hidden.  The default user agent stylesheet sets
   `display: none` on `[hidden]`, but our `.modal` rule above sets
   `display: flex`, which would override the default.  This rule
   ensures that the hidden attribute takes precedence so the modal
   backdrop does not block pointer events when it should be hidden. */
#modal[hidden] {
  display: none !important;
  pointer-events: none;
}

.modal-content {
  background-color: var(--card-bg);
  color: var(--text-color);
  padding: 1rem;
  border-radius: 6px;
  max-width: 600px;
  width: 100%;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);
}

/* Utility classes */
.hidden {
  display: none;
}

table {
  border-collapse: collapse;
  width: 100%;
}

th, td {
  padding: 0.5rem;
  text-align: left;
  border-bottom: 1px solid var(--border-color);
}

/* Low stock highlight */
.low-stock {
  background-color: rgba(255, 0, 0, 0.1);
}

/* KPI cards and bar chart */
.kpi-grid {
  display: flex;
  gap: 1rem;
  flex-wrap: wrap;
  margin-bottom: 1rem;
}
.kpi-card {
  background: var(--card-bg);
  padding: 1rem;
  border-radius: 6px;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
  flex: 1;
  min-width: 180px;
}
.kpi-card h3 {
  font-size: 0.95rem;
  margin-bottom: 0.4rem;
  color: var(--text-color);
}
.kpi-card p {
  font-size: 1.3rem;
  font-weight: bold;
}
.bar-chart {
  margin-top: 0.5rem;
}
.bar-chart .bar-row {
  display: flex;
  align-items: center;
  margin: 0.25rem 0;
}
.bar-chart .bar-label {
  width: 80px;
  flex-shrink: 0;
}
.bar-chart .bar {
  height: 1.2rem;
  background: var(--accent-bg);
  color: var(--accent-text);
  border-radius: 4px;
  padding: 0 0.3rem;
  display: flex;
  align-items: center;
  justify-content: flex-end;
  font-size: 0.8rem;
}

th {
  background-color: var(--table-header-bg);
  color: var(--table-header-text);
  position: sticky;
  top: 0;
  z-index: 1;
}

button {
  cursor: pointer;
  background-color: var(--button-bg);
  color: var(--button-text);
  border: 1px solid var(--border-color);
  padding: 0.4rem 0.8rem;
  border-radius: 4px;
  font-size: 0.9rem;
}

button:hover {
  background-color: var(--button-hover-bg);
}

input, select {
  width: 100%;
  padding: 0.4rem;
  margin-bottom: 0.6rem;
  border: 1px solid var(--border-color);
  border-radius: 4px;
  background-color: var(--input-bg);
  color: var(--text-color);
}

label {
  font-weight: 600;
  margin-top: 0.6rem;
  display: block;
}

@media (max-width: 768px) {
  .sidebar {
    width: 160px;
  }
  .sidebar .logo {
    font-size: 1.1rem;
  }
}
